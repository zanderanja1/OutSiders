{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gjoke Tashev\\\\Desktop\\\\spletnoProj\\\\OutSiders\\\\web\\\\frontend\\\\src\\\\components\\\\Attractions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Attractions(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [attractions, setAttractions] = useState([]);\n  const [attractions2, setAttractions2] = useState([]);\n  const [oldValues, setOldValues] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/attraction');\n        const data = await res.json();\n\n        // Fetch districts\n        const districtNames = [...new Set(data.map(attraction => attraction.district.name))];\n        const districtPromises = districtNames.map(async districtName => {\n          const res = await fetch('http://localhost:3001/district/' + districtName);\n          return res.json();\n        });\n        const districtResponses = await Promise.all(districtPromises);\n        const fetchedDistricts = districtResponses.reduce((acc, response) => [...acc, ...response], []);\n        setDistricts(fetchedDistricts);\n\n        // Fetch cities\n        const cityNames = [...new Set(fetchedDistricts.map(district => district.city.name))];\n        const cityPromises = cityNames.map(async cityName => {\n          const res = await fetch('http://localhost:3001/city/' + cityName);\n          return res.json();\n        });\n        const cityResponses = await Promise.all(cityPromises);\n        const cities = cityResponses.reduce((acc, response) => [...acc, ...response], []);\n\n        // Combine data and set states\n        const combinedData = data.map(attraction => {\n          const district = fetchedDistricts.find(district => district.name === attraction.district.name);\n          const city = cities.find(city => city.name === district.city.name);\n          return {\n            ...attraction,\n            district,\n            city,\n            isEditing: false\n          };\n        });\n        setAttractions(combinedData);\n        setAttractions2(combinedData);\n        const oldValues1 = combinedData.map(attraction => ({\n          ...attraction\n        }));\n        setOldValues(oldValues1);\n      } catch (error) {\n        console.error('Error fetching attractions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleEditClick = index => {\n    const updatedAttractions = [...attractions];\n    updatedAttractions[index].isEditing = true;\n    setAttractions(updatedAttractions);\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedAttractions = attractions.map((attraction, i) => {\n      if (i === index) {\n        if (field === 'district') {\n          const updatedDistrict = {\n            ...attraction.district,\n            name: value\n          };\n          return {\n            ...attraction,\n            district: updatedDistrict\n          };\n        } else if (field === 'city') {\n          const updatedCity = {\n            ...attraction.city,\n            name: value\n          };\n          return {\n            ...attraction,\n            city: updatedCity\n          };\n        } else {\n          return {\n            ...attraction,\n            [field]: value\n          };\n        }\n      }\n      return attraction;\n    });\n    setAttractions(updatedAttractions);\n  };\n  const saveOldValues = () => {\n    setOldValues(attractions.map(attraction => ({\n      ...attraction\n    })));\n  };\n  const updateAttraction = async index => {\n    const attraction = attractions[index];\n    const {\n      _id,\n      name: oldName,\n      district,\n      city,\n      coordinates\n    } = attraction;\n    const {\n      name: newName\n    } = attractions2[index];\n    try {\n      var _oldValues$index, _oldValues$index$dist, _oldValues$index2, _oldValues$index2$dis, _oldValues$index4, _oldValues$index4$cit, _oldValues$index5, _oldValues$index5$cit;\n      const updatePromises = [];\n      console.log(newName + ' | ' + oldName);\n\n      // Update district if changed\n      console.log(district.name + '||' + ((_oldValues$index = oldValues[index]) === null || _oldValues$index === void 0 ? void 0 : (_oldValues$index$dist = _oldValues$index.district) === null || _oldValues$index$dist === void 0 ? void 0 : _oldValues$index$dist.name));\n      if (district !== ((_oldValues$index2 = oldValues[index]) === null || _oldValues$index2 === void 0 ? void 0 : (_oldValues$index2$dis = _oldValues$index2.district) === null || _oldValues$index2$dis === void 0 ? void 0 : _oldValues$index2$dis.name)) {\n        var _oldValues$index3, _oldValues$index3$dis;\n        updatePromises.push(fetch(`http://localhost:3001/district/update/` + ((_oldValues$index3 = oldValues[index]) === null || _oldValues$index3 === void 0 ? void 0 : (_oldValues$index3$dis = _oldValues$index3.district) === null || _oldValues$index3$dis === void 0 ? void 0 : _oldValues$index3$dis._id), {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: district.name\n          })\n        }));\n      }\n\n      // Update city if changed\n      console.log(city.name + '||' + ((_oldValues$index4 = oldValues[index]) === null || _oldValues$index4 === void 0 ? void 0 : (_oldValues$index4$cit = _oldValues$index4.city) === null || _oldValues$index4$cit === void 0 ? void 0 : _oldValues$index4$cit.name));\n      if (city.name !== ((_oldValues$index5 = oldValues[index]) === null || _oldValues$index5 === void 0 ? void 0 : (_oldValues$index5$cit = _oldValues$index5.city) === null || _oldValues$index5$cit === void 0 ? void 0 : _oldValues$index5$cit.name)) {\n        var _oldValues$index6, _oldValues$index6$cit;\n        updatePromises.push(fetch(`http://localhost:3001/city/update/` + ((_oldValues$index6 = oldValues[index]) === null || _oldValues$index6 === void 0 ? void 0 : (_oldValues$index6$cit = _oldValues$index6.city) === null || _oldValues$index6$cit === void 0 ? void 0 : _oldValues$index6$cit._id), {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: city.name\n          })\n        }));\n      }\n\n      // Update coordinates if changed\n      if (newName !== oldName) {\n        updatePromises.push(fetch(`http://localhost:3001/attraction/update/${_id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: oldName,\n            coordinates: coordinates\n          })\n        }));\n      }\n\n      // Wait for all update requests to complete\n      const updateResponses = await Promise.all(updatePromises);\n\n      // Check if all updates were successful\n      const allUpdatesSuccessful = updateResponses.every(res => res.ok);\n      if (allUpdatesSuccessful) {\n        const updatedAttractions = [...attractions];\n        updatedAttractions[index].isEditing = false;\n        setAttractions(updatedAttractions);\n      } else {\n        console.error('Error updating attraction');\n      }\n    } catch (error) {\n      console.error('Error updating attraction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-3\",\n      children: \"Attractions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }, this), attractions.map((attraction, index) => {\n      var _attraction$district, _attraction$city;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: attraction.isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attraction.name,\n              onChange: e => handleInputChange(index, 'name', e.target.value),\n              className: \"form-control\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attraction.district.name,\n              onChange: e => handleInputChange(index, 'district', e.target.value),\n              className: \"form-control\",\n              placeholder: \"District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attraction.city.name,\n              onChange: e => handleInputChange(index, 'city', e.target.value),\n              className: \"form-control\",\n              placeholder: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attraction.coordinates[0],\n              onChange: e => handleInputChange(index, 'coordinates', [e.target.value, attraction.coordinates[1]]),\n              className: \"form-control\",\n              placeholder: \"Coordinate 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attraction.coordinates[1],\n              onChange: e => handleInputChange(index, 'coordinates', [attraction.coordinates[0], e.target.value]),\n              className: \"form-control\",\n              placeholder: \"Coordinate 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => updateAttraction(index),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [attraction.name, \", \", (_attraction$district = attraction.district) === null || _attraction$district === void 0 ? void 0 : _attraction$district.name, \", \", (_attraction$city = attraction.city) === null || _attraction$city === void 0 ? void 0 : _attraction$city.name, \":\", ' ', attraction.coordinates[0], \", \", attraction.coordinates[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this), UserContext.admin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => handleEditClick(index),\n            onMouseDown: saveOldValues,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n}\n_s(Attractions, \"c5r9iwPHbfOPavrax0LRdUkXJOI=\");\n_c = Attractions;\nexport default Attractions;\nvar _c;\n$RefreshReg$(_c, \"Attractions\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UserContext","jsxDEV","_jsxDEV","Attractions","_ref","_s","user","attractions","setAttractions","attractions2","setAttractions2","oldValues","setOldValues","districts","setDistricts","fetchData","res","fetch","data","json","districtNames","Set","map","attraction","district","name","districtPromises","districtName","districtResponses","Promise","all","fetchedDistricts","reduce","acc","response","cityNames","city","cityPromises","cityName","cityResponses","cities","combinedData","find","isEditing","oldValues1","error","console","handleEditClick","index","updatedAttractions","handleInputChange","field","value","i","updatedDistrict","updatedCity","saveOldValues","updateAttraction","_id","oldName","coordinates","newName","_oldValues$index","_oldValues$index$dist","_oldValues$index2","_oldValues$index2$dis","_oldValues$index4","_oldValues$index4$cit","_oldValues$index5","_oldValues$index5$cit","updatePromises","log","_oldValues$index3","_oldValues$index3$dis","push","method","headers","body","JSON","stringify","_oldValues$index6","_oldValues$index6$cit","updateResponses","allUpdatesSuccessful","every","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_attraction$district","_attraction$city","type","onChange","e","target","placeholder","onClick","admin","onMouseDown","_c","$RefreshReg$"],"sources":["C:/Users/Gjoke Tashev/Desktop/spletnoProj/OutSiders/web/frontend/src/components/Attractions.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\r\n  import { useNavigate } from 'react-router-dom';\r\n  import { UserContext } from \"../userContext\";\r\n\r\n  function Attractions({user}) {\r\n    const [attractions, setAttractions] = useState([]);\r\n    const [attractions2, setAttractions2] = useState([]);\r\n    const [oldValues, setOldValues] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch('http://localhost:3001/attraction');\r\n          const data = await res.json();\r\n\r\n          // Fetch districts\r\n          const districtNames = [...new Set(data.map((attraction) => attraction.district.name))];\r\n          const districtPromises = districtNames.map(async (districtName) => {\r\n            const res = await fetch('http://localhost:3001/district/' + districtName);\r\n            return res.json();\r\n          });\r\n          const districtResponses = await Promise.all(districtPromises);\r\n          const fetchedDistricts = districtResponses.reduce((acc, response) => [...acc, ...response], []);\r\n          setDistricts(fetchedDistricts);\r\n\r\n          // Fetch cities\r\n          const cityNames = [...new Set(fetchedDistricts.map((district) => district.city.name))];\r\n          const cityPromises = cityNames.map(async (cityName) => {\r\n            const res = await fetch('http://localhost:3001/city/' + cityName);\r\n            return res.json();\r\n          });\r\n          const cityResponses = await Promise.all(cityPromises);\r\n          const cities = cityResponses.reduce((acc, response) => [...acc, ...response], []);\r\n\r\n          // Combine data and set states\r\n          const combinedData = data.map((attraction) => {\r\n            const district = fetchedDistricts.find((district) => district.name === attraction.district.name);\r\n            const city = cities.find((city) => city.name === district.city.name);\r\n            return { ...attraction, district, city, isEditing: false };\r\n          });\r\n\r\n          setAttractions(combinedData);\r\n          setAttractions2(combinedData);\r\n          const oldValues1 = combinedData.map((attraction) => ({ ...attraction }));\r\n          setOldValues(oldValues1);\r\n        } catch (error) {\r\n          console.error('Error fetching attractions:', error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n    const handleEditClick = (index) => {\r\n      const updatedAttractions = [...attractions];\r\n      updatedAttractions[index].isEditing = true;\r\n      setAttractions(updatedAttractions);\r\n    };\r\n\r\n    const handleInputChange = (index, field, value) => {\r\n      const updatedAttractions = attractions.map((attraction, i) => {\r\n        if (i === index) {\r\n          if (field === 'district') {\r\n            const updatedDistrict = { ...attraction.district, name: value };\r\n            return { ...attraction, district: updatedDistrict };\r\n          } else if (field === 'city') {\r\n            const updatedCity = { ...attraction.city, name: value };\r\n            return { ...attraction, city: updatedCity };\r\n          } else {\r\n            return { ...attraction, [field]: value };\r\n          }\r\n        }\r\n        return attraction;\r\n      });\r\n    \r\n      setAttractions(updatedAttractions);\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    const saveOldValues = () => {\r\n      setOldValues(attractions.map((attraction) => ({ ...attraction })));\r\n    };\r\n\r\n    const updateAttraction = async (index) => {\r\n      const attraction = attractions[index];\r\n      const { _id, name: oldName, district, city, coordinates } = attraction;\r\n      const { name: newName } = attractions2[index];\r\n\r\n      try {\r\n        const updatePromises = [];\r\n        console.log(newName + ' | ' + oldName);\r\n\r\n        // Update district if changed\r\n        console.log(district.name + '||' + oldValues[index]?.district?.name);\r\n        if (district !== oldValues[index]?.district?.name) {\r\n          updatePromises.push(\r\n            fetch(`http://localhost:3001/district/update/`+oldValues[index]?.district?._id, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                name: district.name\r\n              }),\r\n            })\r\n          );\r\n        }\r\n\r\n        // Update city if changed\r\n        console.log(city.name+ '||' + oldValues[index]?.city?.name);\r\n        if (city.name !== oldValues[index]?.city?.name) {\r\n          updatePromises.push(\r\n            fetch(`http://localhost:3001/city/update/`+oldValues[index]?.city?._id, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                name: city.name ,\r\n              }),\r\n            })\r\n          );\r\n        }\r\n\r\n        // Update coordinates if changed\r\n        if (newName !== oldName) {\r\n          updatePromises.push(\r\n            fetch(`http://localhost:3001/attraction/update/${_id}`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                name: oldName,\r\n                coordinates: coordinates,\r\n              }),\r\n            })\r\n          );\r\n        }\r\n\r\n        // Wait for all update requests to complete\r\n        const updateResponses = await Promise.all(updatePromises);\r\n\r\n        // Check if all updates were successful\r\n        const allUpdatesSuccessful = updateResponses.every((res) => res.ok);\r\n\r\n        if (allUpdatesSuccessful) {\r\n          const updatedAttractions = [...attractions];\r\n          updatedAttractions[index].isEditing = false;\r\n          setAttractions(updatedAttractions);\r\n        } else {\r\n          console.error('Error updating attraction');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating attraction:', error);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n  <h3 className=\"mt-3\">Attractions:</h3>\r\n  {attractions.map((attraction, index) => (\r\n    <div key={index} className=\"mb-3\">\r\n      {attraction.isEditing ? (\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              value={attraction.name}\r\n              onChange={(e) => handleInputChange(index, 'name', e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              value={attraction.district.name}\r\n              onChange={(e) => handleInputChange(index, 'district', e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"District\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              value={attraction.city.name}\r\n              onChange={(e) => handleInputChange(index, 'city', e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"City\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              value={attraction.coordinates[0]}\r\n              onChange={(e) =>\r\n                handleInputChange(index, 'coordinates', [e.target.value, attraction.coordinates[1]])\r\n              }\r\n              className=\"form-control\"\r\n              placeholder=\"Coordinate 1\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              value={attraction.coordinates[1]}\r\n              onChange={(e) =>\r\n                handleInputChange(index, 'coordinates', [attraction.coordinates[0], e.target.value])\r\n              }\r\n              className=\"form-control\"\r\n              placeholder=\"Coordinate 2\"\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <button className=\"btn btn-primary\" onClick={() => updateAttraction(index)}>Update</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {attraction.name}, {attraction.district?.name}, {attraction.city?.name}:{' '}\r\n            {attraction.coordinates[0]}, {attraction.coordinates[1]}\r\n          </p>\r\n          {UserContext.admin && (\r\n            <button className=\"btn btn-secondary\" onClick={() => handleEditClick(index)} onMouseDown={saveOldValues}>\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n    );\r\n  }\r\n\r\n  export default Attractions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}