{"ast":null,"code":"var _jsxFileName = \"/Users/zanderanja/Desktop/OutSiders/frontend/src/components/Graphs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart } from 'chart.js/auto'; // Import the Chart.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [attractions, setAttractions] = useState([]);\n  const [chart, setChart] = useState(null);\n  useEffect(() => {\n    fetchAttractionData();\n  }, []);\n  async function fetchAttractionData() {\n    try {\n      const [regions, cities, districts, attractions] = await Promise.all([fetch('http://localhost:3001/region/').then(res => res.json()), fetch('http://localhost:3001/city/').then(res => res.json()), fetch('http://localhost:3001/district/').then(res => res.json()), fetch('http://localhost:3001/attraction/list').then(res => res.json())]);\n      console.log(regions);\n      console.log(cities);\n      console.log(districts);\n      console.log(attractions);\n      const mappedAttractions = mapAttractions(attractions, districts, cities, regions);\n      setAttractions(mappedAttractions);\n    } catch (error) {\n      console.error('Error fetching attraction data:', error);\n    }\n  }\n  function mapAttractions(attractions, districts, cities, regions) {\n    return attractions.map(attraction => {\n      const district = districts.find(district => district.name === attraction.district.name);\n      const city = cities.find(city => city.name === district.city.name);\n      const region = regions.find(region => region.name === city.region.name);\n      return {\n        ...attraction,\n        region: region.name\n      };\n    });\n  }\n  useEffect(() => {\n    if (attractions.length > 0) {\n      destroyChart();\n      const newChart = createGraph(attractions);\n      setChart(newChart);\n    }\n  }, [attractions]);\n  function createGraph(attractions) {\n    const regionCount = attractions.reduce((count, attraction) => {\n      const region = attraction.region;\n      count[region] = (count[region] || 0) + 1;\n      return count;\n    }, {});\n    const labels = Object.keys(regionCount);\n    const counts = Object.values(regionCount);\n    const chartData = {\n      labels,\n      datasets: [{\n        label: 'Attractions by Region',\n        data: counts,\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    };\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'category',\n          beginAtZero: true,\n          maxBarThickness: 50,\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          beginAtZero: true,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            drawBorder: false,\n            zeroLineColor: 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      }\n    };\n    const newChart = new Chart('chartCanvas', {\n      type: 'bar',\n      data: chartData,\n      options: chartOptions\n    });\n    return newChart;\n  }\n  function destroyChart() {\n    if (chart) {\n      chart.destroy();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Attractions by Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"chartCanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MWdiEaiwgJ4BwA6okLXP2fez51s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","jsxDEV","_jsxDEV","App","_s","attractions","setAttractions","chart","setChart","fetchAttractionData","regions","cities","districts","Promise","all","fetch","then","res","json","console","log","mappedAttractions","mapAttractions","error","map","attraction","district","find","name","city","region","length","destroyChart","newChart","createGraph","regionCount","reduce","count","labels","Object","keys","counts","values","chartData","datasets","label","data","backgroundColor","borderColor","borderWidth","chartOptions","scales","x","type","beginAtZero","maxBarThickness","grid","display","y","color","drawBorder","zeroLineColor","options","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/zanderanja/Desktop/OutSiders/frontend/src/components/Graphs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart } from 'chart.js/auto'; // Import the Chart.js library\r\n\r\nfunction App() {\r\n  const [attractions, setAttractions] = useState([]);\r\n  const [chart, setChart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAttractionData();\r\n  }, []);\r\n\r\n  async function fetchAttractionData() {\r\n    try {\r\n      const [regions, cities, districts, attractions] = await Promise.all([\r\n        fetch('http://localhost:3001/region/').then((res) => res.json()),\r\n        fetch('http://localhost:3001/city/').then((res) => res.json()),\r\n        fetch('http://localhost:3001/district/').then((res) => res.json()),\r\n        fetch('http://localhost:3001/attraction/list').then((res) => res.json())\r\n      ]);\r\n\r\n      console.log(regions);\r\n      console.log(cities);\r\n      console.log(districts);\r\n      console.log(attractions);\r\n\r\n      const mappedAttractions = mapAttractions(attractions, districts, cities, regions);\r\n      setAttractions(mappedAttractions);\r\n    } catch (error) {\r\n      console.error('Error fetching attraction data:', error);\r\n    }\r\n  }\r\n\r\n  function mapAttractions(attractions, districts, cities, regions) {\r\n    return attractions.map((attraction) => {\r\n      const district = districts.find((district) => district.name === attraction.district.name);\r\n      const city = cities.find((city) => city.name === district.city.name);\r\n      const region = regions.find((region) => region.name === city.region.name);\r\n\r\n      return {\r\n        ...attraction,\r\n        region: region.name\r\n      };\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (attractions.length > 0) {\r\n      destroyChart();\r\n\r\n      const newChart = createGraph(attractions);\r\n      setChart(newChart);\r\n    }\r\n  }, [attractions]);\r\n\r\n  function createGraph(attractions) {\r\n    const regionCount = attractions.reduce((count, attraction) => {\r\n      const region = attraction.region;\r\n      count[region] = (count[region] || 0) + 1;\r\n      return count;\r\n    }, {});\r\n\r\n    const labels = Object.keys(regionCount);\r\n    const counts = Object.values(regionCount);\r\n\r\n    const chartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Attractions by Region',\r\n          data: counts,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const chartOptions = {\r\n      scales: {\r\n        x: {\r\n          type: 'category',\r\n          beginAtZero: true,\r\n          maxBarThickness: 50,\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.1)',\r\n            drawBorder: false,\r\n            zeroLineColor: 'rgba(0, 0, 0, 0.1)',\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    const newChart = new Chart('chartCanvas', {\r\n      type: 'bar',\r\n      data: chartData,\r\n      options: chartOptions,\r\n    });\r\n\r\n    return newChart;\r\n  }\r\n\r\n  function destroyChart() {\r\n    if (chart) {\r\n      chart.destroy();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My App</h1>\r\n      <div>\r\n        <h2>Attractions by Region</h2>\r\n        <canvas id=\"chartCanvas\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}