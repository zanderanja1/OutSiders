{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gjoke Tashev\\\\Desktop\\\\spletnoProj\\\\OutSiders\\\\web\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapRef = useRef(null); // this will store the map instance\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      mapRef.current = L.map('mapid').setView([46.55, 15.65], 13); // Coordinates updated to Maribor, Slovenia\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19\n      }).addTo(mapRef.current);\n      fetch('/input.geojson').then(response => response.json()).then(data => {\n        L.geoJson(data).addTo(mapRef.current);\n      });\n    }\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"My App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mapid\",\n          style: {\n            height: \"600px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Map","_s","mapRef","current","map","setView","tileLayer","maxZoom","addTo","fetch","then","response","json","data","geoJson","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","_c","$RefreshReg$"],"sources":["C:/Users/Gjoke Tashev/Desktop/spletnoProj/OutSiders/web/frontend/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Map() {\r\n  const mapRef = useRef(null); // this will store the map instance\r\n\r\n  useEffect(() => {\r\n    if (!mapRef.current) {\r\n      mapRef.current = L.map('mapid').setView([46.55, 15.65], 13); // Coordinates updated to Maribor, Slovenia\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          maxZoom: 19,\r\n      }).addTo(mapRef.current);\r\n\r\n      fetch('/input.geojson')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              L.geoJson(data).addTo(mapRef.current);\r\n          });\r\n    }\r\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-lg-12\"> {/* Changed from col-lg-8 to col-lg-12 for more width */}\r\n          <h1 className=\"text-center\">My App</h1>\r\n          <div id=\"mapid\" style={{height: \"600px\", width: \"100%\"}}></div> {/* Increased height to 600px */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,MAAM,CAACC,OAAO,EAAE;MACnBD,MAAM,CAACC,OAAO,GAAGN,CAAC,CAACO,GAAG,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC7DR,CAAC,CAACS,SAAS,CAAC,oDAAoD,EAAE;QAC9DC,OAAO,EAAE;MACb,CAAC,CAAC,CAACC,KAAK,CAACN,MAAM,CAACC,OAAO,CAAC;MAExBM,KAAK,CAAC,gBAAgB,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVhB,CAAC,CAACiB,OAAO,CAACD,IAAI,CAAC,CAACL,KAAK,CAACN,MAAM,CAACC,OAAO,CAAC;MACzC,CAAC,CAAC;IACR;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBjB,OAAA;MAAKgB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCjB,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,GAAC,eAC1BjB,OAAA;UAAIgB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCrB,OAAA;UAAKsB,EAAE,EAAC,OAAO;UAACC,KAAK,EAAE;YAACC,MAAM,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAM;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA5BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}