{"ast":null,"code":"var _jsxFileName = \"/Users/zanderanja/Desktop/OutSiders/frontend/src/components/Attractions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Attractions() {\n  _s();\n  const [attractions, setAttractions] = useState([]);\n  const [attractions2, setAttractions2] = useState([]);\n  const [oldValues, setOldValues] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/attraction');\n        const data = await res.json();\n        javascript;\n\n        // Fetch districts\n        const districtNames = [...new Set(data.map(attraction => attraction.district.name))];\n        const districtPromises = districtNames.map(async districtName => {\n          const res = await fetch('http://localhost:3001/district/' + districtName);\n          return res.json();\n        });\n        const districtResponses = await Promise.all(districtPromises);\n        const fetchedDistricts = districtResponses.reduce((acc, response) => [...acc, ...response], []);\n        setDistricts(fetchedDistricts);\n\n        // Fetch cities\n        const cityNames = [...new Set(fetchedDistricts.map(district => district.city.name))];\n        const cityPromises = cityNames.map(async cityName => {\n          const res = await fetch('http://localhost:3001/city/' + cityName);\n          return res.json();\n        });\n        const cityResponses = await Promise.all(cityPromises);\n        const cities = cityResponses.reduce((acc, response) => [...acc, ...response], []);\n\n        // Combine data and set states\n        const combinedData = data.map(attraction => {\n          const district = fetchedDistricts.find(district => district.name === attraction.district.name);\n          const city = cities.find(city => city.name === district.city.name);\n          return {\n            ...attraction,\n            district,\n            city,\n            isEditing: false\n          };\n        });\n        setAttractions(combinedData);\n        setAttractions2(combinedData);\n        setOldValues(combinedData);\n      } catch (error) {\n        console.error('Error fetching attractions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleEditClick = index => {\n    const updatedAttractions = [...attractions];\n    updatedAttractions[index].isEditing = true;\n    setAttractions(updatedAttractions);\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedAttractions = attractions.map((attraction, i) => {\n      if (i === index) {\n        return {\n          ...attraction,\n          [field]: value\n        };\n      }\n      return attraction;\n    });\n    scss;\n    setAttractions(updatedAttractions);\n  };\n  const saveOldValues = () => {\n    setOldValues([...attractions]);\n  };\n  const updateAttraction = async index => {\n    const attraction = attractions[index];\n    const {\n      _id,\n      name: oldName,\n      district,\n      city,\n      coordinates\n    } = attraction;\n    const {\n      name: newName\n    } = attractions2[index];\n    php;\n    try {\n      var _oldValues$index, _oldValues$index$dist, _oldValues$index2, _oldValues$index2$dis, _oldValues$index4, _oldValues$index4$cit;\n      const updatePromises = [];\n      console.log(newName + ' | ' + oldName);\n\n      // Update district if changed\n      console.log(attraction.district.name + '||' + ((_oldValues$index = oldValues[index]) === null || _oldValues$index === void 0 ? void 0 : (_oldValues$index$dist = _oldValues$index.district) === null || _oldValues$index$dist === void 0 ? void 0 : _oldValues$index$dist.name));\n      if (attraction.district.name !== ((_oldValues$index2 = oldValues[index]) === null || _oldValues$index2 === void 0 ? void 0 : (_oldValues$index2$dis = _oldValues$index2.district) === null || _oldValues$index2$dis === void 0 ? void 0 : _oldValues$index2$dis.name)) {\n        var _oldValues$index3, _oldValues$index3$dis;\n        updatePromises.push(fetch(`http://localhost:3001/district/update`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            oldName: (_oldValues$index3 = oldValues[index]) === null || _oldValues$index3 === void 0 ? void 0 : (_oldValues$index3$dis = _oldValues$index3.district) === null || _oldValues$index3$dis === void 0 ? void 0 : _oldValues$index3$dis.name,\n            newName: attraction.district.name\n          })\n        }));\n      }\n\n      // Update city if changed\n      if (attraction.city.name !== ((_oldValues$index4 = oldValues[index]) === null || _oldValues$index4 === void 0 ? void 0 : (_oldValues$index4$cit = _oldValues$index4.city) === null || _oldValues$index4$cit === void 0 ? void 0 : _oldValues$index4$cit.name)) {\n        var _oldValues$index5, _oldValues$index5$cit;\n        updatePromises.push(fetch(`http://localhost:3001/city/update`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            oldName: (_oldValues$index5 = oldValues[index]) === null || _oldValues$index5 === void 0 ? void 0 : (_oldValues$index5$cit = _oldValues$index5.city) === null || _oldValues$index5$cit === void 0 ? void 0 : _oldValues$index5$cit.name,\n            newName: attraction.city.name\n          })\n        }));\n      }\n\n      // Update coordinates if changed\n      if (newName !== oldName) {\n        updatePromises.push(fetch(`http://localhost:3001/attraction/update/${_id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: oldName,\n            coordinates: coordinates\n          })\n        }));\n      }\n\n      // Wait for all update requests to complete\n      const updateResponses = await Promise.all(updatePromises);\n\n      // Check if all updates were successful\n      const allUpdatesSuccessful = updateResponses.every(res => res.ok);\n      if (allUpdatesSuccessful) {\n        const updatedAttractions = [...attractions];\n        updatedAttractions[index].isEditing = false;\n        setAttractions(updatedAttractions);\n      } else {\n        console.error('Error updating attraction');\n      }\n    } catch (error) {\n      console.error('Error updating attraction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Attractions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 1\n    }, this), attractions.map((attraction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: attraction.isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: attraction.name,\n          onChange: e => handleInputChange(index, 'name', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: attraction.district.name,\n          onChange: e => handleInputChange(index, 'district', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: attraction.city.name,\n          onChange: e => handleInputChange(index, 'city', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: attraction.coordinates[0],\n          onChange: e => handleInputChange(index, 'coordinates', [e.target.value, attraction.coordinates[1]])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: attraction.coordinates[1],\n          onChange: e => handleInputChange(index, 'coordinates', [attraction.coordinates[0], e.target.value])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateAttraction(index),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [attraction.name, \", \", attraction.district.name, \", \", attraction.city.name, \": \", attraction.coordinates[0], \",\", ' ', attraction.coordinates[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(index),\n          onMouseDown: saveOldValues,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 1\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 1\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 1\n  }, this);\n}\n_s(Attractions, \"c5r9iwPHbfOPavrax0LRdUkXJOI=\");\n_c = Attractions;\nexport default Attractions;\nvar _c;\n$RefreshReg$(_c, \"Attractions\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Attractions","_s","attractions","setAttractions","attractions2","setAttractions2","oldValues","setOldValues","districts","setDistricts","fetchData","res","fetch","data","json","javascript","districtNames","Set","map","attraction","district","name","districtPromises","districtName","districtResponses","Promise","all","fetchedDistricts","reduce","acc","response","cityNames","city","cityPromises","cityName","cityResponses","cities","combinedData","find","isEditing","error","console","handleEditClick","index","updatedAttractions","handleInputChange","field","value","i","scss","saveOldValues","updateAttraction","_id","oldName","coordinates","newName","php","_oldValues$index","_oldValues$index$dist","_oldValues$index2","_oldValues$index2$dis","_oldValues$index4","_oldValues$index4$cit","updatePromises","log","_oldValues$index3","_oldValues$index3$dis","push","method","headers","body","JSON","stringify","_oldValues$index5","_oldValues$index5$cit","updateResponses","allUpdatesSuccessful","every","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/zanderanja/Desktop/OutSiders/frontend/src/components/Attractions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Attractions() {\r\nconst [attractions, setAttractions] = useState([]);\r\nconst [attractions2, setAttractions2] = useState([]);\r\nconst [oldValues, setOldValues] = useState([]);\r\nconst [districts, setDistricts] = useState([]);\r\n\r\nuseEffect(() => {\r\nconst fetchData = async () => {\r\ntry {\r\nconst res = await fetch('http://localhost:3001/attraction');\r\nconst data = await res.json();\r\n\r\njavascript\r\n\r\n    // Fetch districts\r\n    const districtNames = [...new Set(data.map((attraction) => attraction.district.name))];\r\n    const districtPromises = districtNames.map(async (districtName) => {\r\n      const res = await fetch('http://localhost:3001/district/' + districtName);\r\n      return res.json();\r\n    });\r\n    const districtResponses = await Promise.all(districtPromises);\r\n    const fetchedDistricts = districtResponses.reduce((acc, response) => [...acc, ...response], []);\r\n    setDistricts(fetchedDistricts);\r\n\r\n    // Fetch cities\r\n    const cityNames = [...new Set(fetchedDistricts.map((district) => district.city.name))];\r\n    const cityPromises = cityNames.map(async (cityName) => {\r\n      const res = await fetch('http://localhost:3001/city/' + cityName);\r\n      return res.json();\r\n    });\r\n    const cityResponses = await Promise.all(cityPromises);\r\n    const cities = cityResponses.reduce((acc, response) => [...acc, ...response], []);\r\n\r\n    // Combine data and set states\r\n    const combinedData = data.map((attraction) => {\r\n      const district = fetchedDistricts.find((district) => district.name === attraction.district.name);\r\n      const city = cities.find((city) => city.name === district.city.name);\r\n      return { ...attraction, district, city, isEditing: false };\r\n    });\r\n\r\n    setAttractions(combinedData);\r\n    setAttractions2(combinedData);\r\n    setOldValues(combinedData);\r\n  } catch (error) {\r\n    console.error('Error fetching attractions:', error);\r\n  }\r\n};\r\n\r\nfetchData();\r\n\r\n}, []);\r\n\r\nconst handleEditClick = (index) => {\r\nconst updatedAttractions = [...attractions];\r\nupdatedAttractions[index].isEditing = true;\r\nsetAttractions(updatedAttractions);\r\n};\r\n\r\nconst handleInputChange = (index, field, value) => {\r\nconst updatedAttractions = attractions.map((attraction, i) => {\r\nif (i === index) {\r\nreturn { ...attraction, [field]: value };\r\n}\r\nreturn attraction;\r\n});\r\n\r\nscss\r\n\r\nsetAttractions(updatedAttractions);\r\n\r\n};\r\n\r\nconst saveOldValues = () => {\r\nsetOldValues([...attractions]);\r\n};\r\n\r\nconst updateAttraction = async (index) => {\r\nconst attraction = attractions[index];\r\nconst { _id, name: oldName, district, city, coordinates } = attraction;\r\nconst { name: newName } = attractions2[index];\r\n\r\nphp\r\n\r\ntry {\r\n  const updatePromises = [];\r\n  console.log(newName + ' | ' + oldName);\r\n\r\n  // Update district if changed\r\n  console.log(attraction.district.name + '||' + oldValues[index]?.district?.name);\r\n  if (attraction.district.name !== oldValues[index]?.district?.name) {\r\n    updatePromises.push(\r\n      fetch(`http://localhost:3001/district/update`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          oldName: oldValues[index]?.district?.name,\r\n          newName: attraction.district.name,\r\n        }),\r\n      })\r\n    );\r\n  }\r\n\r\n  // Update city if changed\r\n  if (attraction.city.name !== oldValues[index]?.city?.name) {\r\n    updatePromises.push(\r\n      fetch(`http://localhost:3001/city/update`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          oldName: oldValues[index]?.city?.name,\r\n          newName: attraction.city.name,\r\n        }),\r\n      })\r\n    );\r\n  }\r\n\r\n  // Update coordinates if changed\r\n  if (newName !== oldName) {\r\n    updatePromises.push(\r\n      fetch(`http://localhost:3001/attraction/update/${_id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: oldName,\r\n          coordinates: coordinates,\r\n        }),\r\n      })\r\n    );\r\n  }\r\n\r\n  // Wait for all update requests to complete\r\n  const updateResponses = await Promise.all(updatePromises);\r\n\r\n  // Check if all updates were successful\r\n  const allUpdatesSuccessful = updateResponses.every((res) => res.ok);\r\n\r\n  if (allUpdatesSuccessful) {\r\n    const updatedAttractions = [...attractions];\r\n    updatedAttractions[index].isEditing = false;\r\n    setAttractions(updatedAttractions);\r\n  } else {\r\n    console.error('Error updating attraction');\r\n  }\r\n} catch (error) {\r\n  console.error('Error updating attraction:', error);\r\n}\r\n\r\n};\r\n\r\nreturn (\r\n<div>\r\n<h3>Attractions:</h3>\r\n{attractions.map((attraction, index) => (\r\n<div key={index}>\r\n{attraction.isEditing ? (\r\n<div>\r\n<input\r\ntype=\"text\"\r\nvalue={attraction.name}\r\nonChange={(e) => handleInputChange(index, 'name', e.target.value)}\r\n/>\r\n<input\r\ntype=\"text\"\r\nvalue={attraction.district.name}\r\nonChange={(e) => handleInputChange(index, 'district', e.target.value)}\r\n/>\r\n<input\r\ntype=\"text\"\r\nvalue={attraction.city.name}\r\nonChange={(e) => handleInputChange(index, 'city', e.target.value)}\r\n/>\r\n<input\r\ntype=\"text\"\r\nvalue={attraction.coordinates[0]}\r\nonChange={(e) =>\r\nhandleInputChange(index, 'coordinates', [e.target.value, attraction.coordinates[1]])\r\n}\r\n/>\r\n<input\r\ntype=\"text\"\r\nvalue={attraction.coordinates[1]}\r\nonChange={(e) =>\r\nhandleInputChange(index, 'coordinates', [attraction.coordinates[0], e.target.value])\r\n}\r\n/>\r\n<button onClick={() => updateAttraction(index)}>Update</button>\r\n</div>\r\n) : (\r\n<div>\r\n<p>\r\n{attraction.name}, {attraction.district.name}, {attraction.city.name}: {attraction.coordinates[0]},{' '}\r\n{attraction.coordinates[1]}\r\n</p>\r\n<button onClick={() => handleEditClick(index)} onMouseDown={saveOldValues}>\r\nEdit\r\n</button>\r\n</div>\r\n)}\r\n</div>\r\n))}\r\n</div>\r\n);\r\n}\r\n\r\nexport default Attractions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}