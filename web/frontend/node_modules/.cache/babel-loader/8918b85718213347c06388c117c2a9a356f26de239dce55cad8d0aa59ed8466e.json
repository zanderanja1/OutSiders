{"ast":null,"code":"var _jsxFileName = \"/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Photo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useMemo, useRef } from 'react';\nimport PhotoDetails from './PhotoDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useOnScreen(ref) {\n  _s();\n  const [isIntersecting, setIntersecting] = useState(false);\n  const observer = useMemo(() => new IntersectionObserver(_ref => {\n    let [entry] = _ref;\n    return setIntersecting(entry.isIntersecting);\n  }), []);\n  useEffect(() => {\n    observer.observe(ref.current);\n    return () => observer.disconnect();\n  }, [observer, ref]);\n  return isIntersecting;\n}\n_s(useOnScreen, \"SKyt/PdFaCOJEVRk86MVrXtk8M8=\");\nfunction Photo(props) {\n  _s2();\n  const ref = useRef(null);\n  const isVisible = useOnScreen(ref);\n  const [viewCountUpdated, setViewCountUpdated] = useState(false);\n  useEffect(() => {\n    if (isVisible && !viewCountUpdated) {\n      const res = fetch(\"http://localhost:3001/photos/updateViews/\" + props.photo._id);\n      console.log(\"+1 view \" + props.photo._id);\n      setViewCountUpdated(true);\n    }\n  }, [isVisible, viewCountUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-dark text-dark mb-2 w-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: `http://localhost:3000/photo/${props.photo._id}`,\n      children: [\" \", props.photo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: ref,\n      className: \"card-img\",\n      src: `http://localhost:3001/${props.photo.path}`,\n      height: \"500px\",\n      width: \"500px\",\n      alt: props.photo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.photo._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-img-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.photo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Views: \", props.photo.views + 1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isVisible && `Yep, I'm on screen`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s2(Photo, \"13hzUZflBRPuzW7XFiEFmQduM20=\", false, function () {\n  return [useOnScreen];\n});\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["useState","useEffect","useMemo","useRef","PhotoDetails","jsxDEV","_jsxDEV","useOnScreen","ref","_s","isIntersecting","setIntersecting","observer","IntersectionObserver","_ref","entry","observe","current","disconnect","Photo","props","_s2","isVisible","viewCountUpdated","setViewCountUpdated","res","fetch","photo","_id","console","log","className","children","href","name","fileName","_jsxFileName","lineNumber","columnNumber","src","path","height","width","alt","views","_c","$RefreshReg$"],"sources":["/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Photo.js"],"sourcesContent":["import { useState, useEffect, useMemo, useRef } from 'react';\r\nimport PhotoDetails from './PhotoDetails';\r\n\r\n\r\nfunction useOnScreen(ref) {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  const observer = useMemo(\r\n    () =>\r\n      new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting)),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    observer.observe(ref.current);\r\n    return () => observer.disconnect();\r\n  }, [observer, ref]);\r\n\r\n  return isIntersecting;\r\n}\r\n\r\n  function Photo(props ) {\r\n    const ref = useRef(null);\r\n    const isVisible = useOnScreen(ref);\r\n    const [viewCountUpdated, setViewCountUpdated] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (isVisible && !viewCountUpdated) {\r\n          const res = fetch(\"http://localhost:3001/photos/updateViews/\" + props.photo._id);\r\n          console.log(\"+1 view \" + props.photo._id);\r\n          setViewCountUpdated(true);\r\n      }\r\n    }, [isVisible, viewCountUpdated]);\r\n    return (\r\n      <div className=\"card bg-dark text-dark mb-2 w-50\">\r\n        <a href={`http://localhost:3000/photo/${props.photo._id}`}> {props.photo.name}</a>\r\n        <img\r\n          ref={ref}\r\n          className=\"card-img\"\r\n          src={`http://localhost:3001/${props.photo.path}`}\r\n          height=\"500px\"\r\n          width=\"500px\"\r\n          alt={props.photo.name}\r\n          \r\n          \r\n        />\r\n        \r\n        <p>{props.photo._id}</p>\r\n        <div className=\"card-img-overlay\">\r\n          <h5 className=\"card-title\">{props.photo.name}</h5>\r\n        </div>\r\n        <p>Views: {props.photo.views + 1} </p>\r\n        <p>{isVisible && `Yep, I'm on screen`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Photo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}