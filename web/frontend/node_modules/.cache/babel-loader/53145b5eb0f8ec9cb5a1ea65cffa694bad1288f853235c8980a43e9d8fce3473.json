{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gjoke Tashev\\\\Desktop\\\\spletnoProj\\\\OutSiders\\\\web\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapRef = useRef(null); // this will store the map instance\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      mapRef.current = L.map('mapid').setView([46.55, 15.65], 13); // Coordinates updated to Maribor, Slovenia\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19\n      }).addTo(mapRef.current);\n\n      // Define your custom icon\n      const customIcon = L.icon({\n        iconUrl: '/loc.png',\n        iconSize: [25, 50],\n        // change these values to change the icon size\n        iconAnchor: [12, 50],\n        // make sure to adjust these too\n        popupAnchor: [-1, -50]\n      });\n      fetch('/input.geojson').then(response => response.json()).then(data => {\n        // Use the pointToLayer option to create a custom marker for each point\n        L.geoJson(data, {\n          pointToLayer: function (feature, latlng) {\n            return L.marker(latlng, {\n              icon: customIcon\n            });\n          }\n        }).addTo(mapRef.current);\n      });\n    }\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mapid\",\n          style: {\n            height: \"600px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Map","_s","mapRef","current","map","setView","tileLayer","maxZoom","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","fetch","then","response","json","data","geoJson","pointToLayer","feature","latlng","marker","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","_c","$RefreshReg$"],"sources":["C:/Users/Gjoke Tashev/Desktop/spletnoProj/OutSiders/web/frontend/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Map() {\r\n  const mapRef = useRef(null); // this will store the map instance\r\n\r\n  useEffect(() => {\r\n    if (!mapRef.current) {\r\n      mapRef.current = L.map('mapid').setView([46.55, 15.65], 13); // Coordinates updated to Maribor, Slovenia\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          maxZoom: 19,\r\n      }).addTo(mapRef.current);\r\n\r\n      // Define your custom icon\r\n      const customIcon = L.icon({\r\n        iconUrl: '/loc.png',\r\n        iconSize: [25, 50], // change these values to change the icon size\r\n        iconAnchor: [12, 50], // make sure to adjust these too\r\n        popupAnchor: [-1, -50]\r\n      });\r\n      \r\n\r\n      fetch('/input.geojson')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              // Use the pointToLayer option to create a custom marker for each point\r\n              L.geoJson(data, {\r\n                  pointToLayer: function(feature, latlng) {\r\n                      return L.marker(latlng, { icon: customIcon });\r\n                  }\r\n              }).addTo(mapRef.current);\r\n          });\r\n    }\r\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-lg-12\"> \r\n          <h1 className=\"text-center\">Map</h1>\r\n          <div id=\"mapid\" style={{height: \"600px\", width: \"100%\"}}></div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,MAAM,CAACC,OAAO,EAAE;MACnBD,MAAM,CAACC,OAAO,GAAGN,CAAC,CAACO,GAAG,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC7DR,CAAC,CAACS,SAAS,CAAC,oDAAoD,EAAE;QAC9DC,OAAO,EAAE;MACb,CAAC,CAAC,CAACC,KAAK,CAACN,MAAM,CAACC,OAAO,CAAC;;MAExB;MACA,MAAMM,UAAU,GAAGZ,CAAC,CAACa,IAAI,CAAC;QACxBC,OAAO,EAAE,UAAU;QACnBC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACpBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACtBC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MACvB,CAAC,CAAC;MAGFC,KAAK,CAAC,gBAAgB,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV;QACAtB,CAAC,CAACuB,OAAO,CAACD,IAAI,EAAE;UACZE,YAAY,EAAE,SAAAA,CAASC,OAAO,EAAEC,MAAM,EAAE;YACpC,OAAO1B,CAAC,CAAC2B,MAAM,CAACD,MAAM,EAAE;cAAEb,IAAI,EAAED;YAAW,CAAC,CAAC;UACjD;QACJ,CAAC,CAAC,CAACD,KAAK,CAACN,MAAM,CAACC,OAAO,CAAC;MAC5B,CAAC,CAAC;IACR;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEJ,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB3B,OAAA;MAAK0B,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzC3B,OAAA;QAAK0B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB3B,OAAA;UAAI0B,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpC/B,OAAA;UAAKgC,EAAE,EAAC,OAAO;UAACC,KAAK,EAAE;YAACC,MAAM,EAAE,OAAO;YAAEC,KAAK,EAAE;UAAM;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CA1CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}