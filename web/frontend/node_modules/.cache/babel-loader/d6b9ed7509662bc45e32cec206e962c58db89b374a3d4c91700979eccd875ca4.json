{"ast":null,"code":"var _jsxFileName = \"/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm(_ref) {\n  _s();\n  let {\n    photo\n  } = _ref;\n  const [text, setText] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log(\"photo id: \" + photo._id);\n      const res = await fetch(`http://localhost:3001/comments/${photo._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: photo._id,\n          text\n        })\n      });\n      if (res.ok) {\n        // Comment created successfully\n        console.log('Comment created!');\n        // Reset the form\n        setText('');\n      } else {\n        // Handle error response\n        console.error('Error creating comment:', res.statusText);\n      }\n    } catch (error) {\n      // Handle network or other error\n      console.error('Error creating comment:', error);\n    }\n  };\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"post\",\n      value: photo._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"text\",\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CommentForm","_ref","_s","photo","text","setText","handleSubmit","event","preventDefault","console","log","_id","res","fetch","method","headers","body","JSON","stringify","post","ok","error","statusText","handleTextChange","target","value","onSubmit","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Comments.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction CommentForm({ photo }) {\n  const [text, setText] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n        console.log(\"photo id: \"+photo._id);\n        const res = await fetch(`http://localhost:3001/comments/${photo._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ post: photo._id, text }),\n      });\n\n      if (res.ok) {\n        // Comment created successfully\n        console.log('Comment created!');\n        // Reset the form\n        setText('');\n      } else {\n        // Handle error response\n        console.error('Error creating comment:', res.statusText);\n      }\n    } catch (error) {\n      // Handle network or other error\n      console.error('Error creating comment:', error);\n    }\n  };\n\n  const handleTextChange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"hidden\" name=\"post\" value={photo._id} />\n      <textarea name=\"text\" value={text} onChange={handleTextChange}></textarea>\n      <button type=\"submit\">Create Comment</button>\n    </form>\n  );\n}\n\nexport default CommentForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,WAAWA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,YAAY,GAACP,KAAK,CAACQ,GAAG,CAAC;MACnC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiCV,KAAK,CAACQ,GAAI,EAAC,EAAE;QACvEG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEhB,KAAK,CAACQ,GAAG;UAAEP;QAAK,CAAC;MAChD,CAAC,CAAC;MAEF,IAAIQ,GAAG,CAACQ,EAAE,EAAE;QACV;QACAX,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/B;QACAL,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,MAAM;QACL;QACAI,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAET,GAAG,CAACU,UAAU,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACd;MACAZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIhB,KAAK,IAAK;IAClCF,OAAO,CAACE,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBAC3B5B,OAAA;MAAO6B,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAEtB,KAAK,CAACQ;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDlC,OAAA;MAAU8B,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAErB,IAAK;MAAC8B,QAAQ,EAAEX;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC1ElC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX;AAAC/B,EAAA,CA1CQF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}