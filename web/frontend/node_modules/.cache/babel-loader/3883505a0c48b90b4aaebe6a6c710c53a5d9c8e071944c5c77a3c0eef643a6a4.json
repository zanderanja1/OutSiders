{"ast":null,"code":"var _jsxFileName = \"/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Photos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Photo from './Photo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getPhotos = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/photos\");\n        const data = await res.json();\n        setPhotos(data);\n      } catch (error) {\n        console.error('Error fetching photos:', error);\n      }\n    };\n    getPhotos();\n  }, []);\n  const handleIntersection = photoId => {\n    incrementViewCount(photoId);\n  };\n  const incrementViewCount = async photoId => {\n    try {\n      await fetch(`http://localhost:3001/photos/${photoId}/increment-views`, {\n        method: 'PUT'\n      });\n    } catch (error) {\n      console.error('Error incrementing view count:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Photos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        photo: photo,\n        handleClick: () => navigate(`/photo/${photo._id}`),\n        handleIntersection: () => handleIntersection(photo._id)\n      }, photo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"vTcPj++5qhlg0Qfv+7hGZBsl4Ac=\", false, function () {\n  return [useNavigate];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["useState","useEffect","useRef","useNavigate","Photo","jsxDEV","_jsxDEV","Photos","_s","photos","setPhotos","navigate","getPhotos","res","fetch","data","json","error","console","handleIntersection","photoId","incrementViewCount","method","children","fileName","_jsxFileName","lineNumber","columnNumber","map","photo","handleClick","_id","_c","$RefreshReg$"],"sources":["/Users/zanderanja/Downloads/sp_v4_sample 2/frontend/src/components/Photos.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Photo from './Photo';\r\n\r\nfunction Photos() {\r\n  const [photos, setPhotos] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getPhotos = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:3001/photos\");\r\n        const data = await res.json();\r\n        setPhotos(data);\r\n      } catch (error) {\r\n        console.error('Error fetching photos:', error);\r\n      }\r\n    };\r\n\r\n    getPhotos();\r\n  }, []);\r\n\r\n  const handleIntersection = (photoId) => {\r\n    incrementViewCount(photoId);\r\n  };\r\n\r\n  const incrementViewCount = async (photoId) => {\r\n    try {\r\n      await fetch(`http://localhost:3001/photos/${photoId}/increment-views`, {\r\n        method: 'PUT',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error incrementing view count:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Photos:</h3>\r\n      <ul>\r\n        {photos.map((photo) => (\r\n          <Photo\r\n            photo={photo}\r\n            key={photo._id}\r\n            handleClick={() => navigate(`/photo/${photo._id}`)}\r\n            handleIntersection={() => handleIntersection(photo._id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QACvD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BN,SAAS,CAACK,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,kBAAkB,GAAIC,OAAO,IAAK;IACtCC,kBAAkB,CAACD,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAOD,OAAO,IAAK;IAC5C,IAAI;MACF,MAAMN,KAAK,CAAE,gCAA+BM,OAAQ,kBAAiB,EAAE;QACrEE,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBrB,OAAA;MAAAiB,QAAA,EACGd,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBvB,OAAA,CAACF,KAAK;QACJyB,KAAK,EAAEA,KAAM;QAEbC,WAAW,EAAEA,CAAA,KAAMnB,QAAQ,CAAE,UAASkB,KAAK,CAACE,GAAI,EAAC,CAAE;QACnDZ,kBAAkB,EAAEA,CAAA,KAAMA,kBAAkB,CAACU,KAAK,CAACE,GAAG;MAAE,GAFnDF,KAAK,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CA/CQD,MAAM;EAAA,QAEIJ,WAAW;AAAA;AAAA6B,EAAA,GAFrBzB,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}